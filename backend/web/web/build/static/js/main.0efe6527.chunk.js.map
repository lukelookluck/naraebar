{"version":3,"sources":["pages/Start/styles.jsx","context/CommonContext.js","pages/Start/index.jsx","layout/Header/styles.jsx","layout/Header/index.jsx","layout/NavigationTab/styles.jsx","pages/Community/style.jsx","components/Community/Recipe/RecipeList/style.jsx","components/Community/Recipe/RecipieListDisplay/style.jsx","components/Community/Comment/ArticleUnderCommentList/style.jsx","pages/CommentDisplay/style.jsx","components/Community/Comment/CommentList/style.jsx","components/Community/ReplyList/style.jsx","components/Community/ReplyList/index.jsx","components/Community/Comment/CommentList/index.jsx","components/Community/Comment/CommentForm/style.jsx","components/Community/Comment/CommentForm/index.jsx","pages/CommentDisplay/index.jsx","components/Community/Comment/ArticleUnderCommentList/index.jsx","components/Community/Recipe/MenuModal/style.jsx","components/Community/Recipe/MenuModal/index.jsx","components/Community/Recipe/RecipieListDisplay/index.jsx","components/Community/Recipe/RecipeList/index.jsx","components/Community/ArticleForm/CreateArticleButton/style.jsx","components/Community/ArticleForm/CreateArticleButton/index.jsx","pages/Community/index.jsx","pages/MyBar/styles.jsx","components/SyncButton/style.jsx","components/SyncButton/index.jsx","pages/MyBar/index.jsx","layout/NavigationTab/index.jsx","layout/index.jsx","pages/Main/index.jsx","pages/SignUp/styles.jsx","pages/SignUp/index.jsx","pages/FindPW/styles.jsx","pages/FindPW/index.jsx","pages/UploadRecipe/styles.jsx","pages/UploadRecipe/index.jsx","pages/ArticleForm/style.jsx","components/Community/ArticleForm/ImageUploadButton/style.jsx","components/Community/ArticleForm/InputImage/style.jsx","components/Community/ArticleForm/InputImage/index.jsx","components/Community/ArticleForm/ImageUploadButton/index.jsx","components/Community/ArticleForm/Temp1/index.jsx","pages/ArticleForm/index.jsx","App.js","common/CommonHooks.jsx","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","CommonContext","createContext","useStyles","makeStyles","logotext","fontFamily","Start","history","useHistory","useContext","serverUrl","setUser","user","onClickRedirectPathHandler","name","e","window","scrollTo","push","useState","id","setId","pw","setPw","classes","Grid","container","className","justify","alignItems","item","xs","type","placeholder","value","onChange","target","Button","variant","onClick","url","data","username","password","Axios","post","then","response","console","log","catch","error","alert","Header","props","myIndex","setMyIndex","showReplysBool","setshowReplysBool","showReplys","switcher","replys","length","reverse","map","reply","idx","likeButton","countLikeIt1","LIKE","likeIt","color","key","fontSize","content","myTime","theTime","gap","Date","sec_gap","Math","floor","min_gap","hour_gap","day_gap","mon_gap","getTime","created_at","comments","comment","thisComment","likeSubmit","doReply","ReplyList","a","commentInput","handleSubmit","setCommentInput","listComment","setListComment","article","location","state","parent","refreshList","axios","get","headers","Authorization","token","params","res","err","useEffect","goBack","CommentList","CommentForm","to","pathname","theme","modal","display","justifyContent","flexDirection","paper","backgroundColor","width","height","padding","textAlign","float","border","React","open","setOpen","Modal","disableEnforceFocus","disableAutoFocus","onClose","Fade","in","DeleteArticle","list","index","isSaveit","setSaveit","saveButton","saveIt","moreButton","href","setCardContent","detail","ingredient1","measure1","ingredient2","measure2","ingredient3","measure3","ingredient4","measure4","ingredient5","measure5","ingredient6","measure6","setIngredients","myHide","setmyHide","preventDefault","substring","cardContent","MenuModal","src","image","alt","title","articleList","setArticleList","RecipieListDisplay","delete","Community","RecipeList","CreateArticleButton","SyncButton","endIcon","Icon","MyBar","menuList","setMenuList","setIndex","MyCocktail","like_articles","Card","Body","Title","drink_name","IconButton","aria-label","Img","Text","strInstructions","ListGroup","strIngredient1","ListGroupItem","strIngredient2","strIngredient3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","initialEntries","initialIndex","query","URLSearchParams","search","page","parseInt","Pagination","size","count","renderItem","PaginationItem","component","Link","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","root","palette","background","NavigationTab","useTheme","setValue","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Portal","document","body","Layout","Main","signupText","SignUp","TextField","required","fullWidth","autoFocus","FindPW","UploadRecipe","SingleLineGridList","temp","tile","margin","spacing","input","ImageUploadButton","imgBase64","setImgBase64","imgFile","setImgFile","accept","reader","FileReader","readAsDataURL","files","onloadend","base64","result","toString","setArticleFormData","articleFormData","htmlFor","myNum","setMyNum","class","listInput","unblock","block","action","confirm","multiline","rows","Temp1","put","App","initialValue","Error","actualInitialValue","undefined","store","set","useLocalStorageSetState","email","Provider","exact","path","ArticleForm","CommentDisplay","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0efe6527.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n\r\n    & .logoGrid {\r\n        // margin-top: 60px;\r\n        height: 360px;\r\n        background-color: rgb(56, 97, 149);\r\n        color: white;\r\n    }\r\n\r\n    & #logo_en {\r\n        margin-top: 100px;\r\n        margin-bottom: 0;\r\n        \r\n        font-size: 70px;\r\n    }\r\n    & #logo_ko {\r\n        font-size: 30px;\r\n    }\r\n\r\n    & .login {\r\n        margin-top: 70px;\r\n    }\r\n\r\n    & #id {\r\n        width: 100%;\r\n        height: 40px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    & #pw {\r\n        width: 100%;\r\n        height: 40px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    & .login_btn {\r\n        margin-top: 30px;\r\n        width: 100%;\r\n        height: 50px;\r\n        background-color: rgb(76, 127, 188);\r\n        text-decoration: none;\r\n        border: none;\r\n        color: white;\r\n        font-family: 'IBMPlexSansKR-Text';\r\n        font-size: 20px;\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    & .login_btn:hover {\r\n        background-color: rgb(76, 127, 188);\r\n    }\r\n\r\n    & .bottom {\r\n        color: rgb(56, 97, 149);\r\n        font-family: 'IBMPlexSansKR-Text';\r\n    }\r\n\r\n    @media(min-width: 700px) {\r\n\r\n        & #logo_en {\r\n            margin-top: 50px;\r\n            margin-bottom: 0px;\r\n            font-size: 110px;\r\n        }\r\n        & #logo_ko {\r\n            margin-top: 0px;\r\n            font-size: 60px;\r\n        }\r\n\r\n        & #id {\r\n            width: 50%;\r\n        }\r\n    \r\n        & #pw {\r\n            width: 50%;\r\n        }\r\n\r\n        & .login_btn {\r\n            width: 50%;\r\n        }\r\n\r\n        & #signup {\r\n            padding-left: 300px;\r\n        }\r\n\r\n        & #findpw {\r\n            padding-right: 300px;\r\n        }\r\n\r\n    }\r\n`;\r\n\r\nexport default Wrapper;","import { createContext } from \"react\";\r\n\r\nexport const CommonContext = createContext(null);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Wrapper from \"./styles\";\r\n// import { Login } from \"./auth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../index.css\";\r\n\r\nimport Axios from \"axios\";\r\nimport { CommonContext } from \"../../context/CommonContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  logotext: {\r\n    fontFamily: \"Cafe24Ohsquare\",\r\n  },\r\n});\r\n\r\nconst Start = () => {\r\n  let history = useHistory();\r\n\r\n  const { serverUrl, user, setUser } = useContext(CommonContext);\r\n\r\n  const onClickRedirectPathHandler = (name) => (e) => {\r\n    window.scrollTo(0, 0);\r\n    history.push(name);\r\n  };\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    //   Login({ id, pw });\r\n\r\n    const url = `${serverUrl}/accounts/login/`;\r\n    const data = {\r\n      username: id,\r\n      password: pw,\r\n    };\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    Axios.post(url, data, headers)\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data);\r\n        setUser({ ...response.data });\r\n        history.push(\"/Main\");\r\n        console.log(\"로그인 됨\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"아이디, 비밀번호를 확인해주세요\");\r\n        setPw(\"\");\r\n      });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid container className=\"root\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} className=\"logoGrid\">\r\n          <p className={classes.logotext} id=\"logo_en\">\r\n            NaReBar\r\n          </p>\r\n          <p className={classes.logotext} id=\"logo_ko\">\r\n            나만의 레시피 바텐더\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={10} className=\"login\">\r\n          <div>\r\n            <input\r\n              id=\"id\"\r\n              type=\"text\"\r\n              name=\"id\"\r\n              placeholder=\"아이디\"\r\n              value={id}\r\n              onChange={({ target: { value } }) => setId(value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"pw\"\r\n              type=\"password\"\r\n              name=\"pw\"\r\n              placeholder=\"비밀번호\"\r\n              value={pw}\r\n              onChange={({ target: { value } }) => setPw(value)}\r\n            ></input>\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"login_btn\"\r\n            onClick={handleLogin}\r\n          >\r\n            로그인\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6} className=\"bottom\">\r\n          <div id=\"signup\" onClick={onClickRedirectPathHandler(\"/SignUp\")}>\r\n            회원가입\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6} className=\"bottom\">\r\n          <div id=\"findpw\" onClick={onClickRedirectPathHandler(\"/FindPW\")}>\r\n            비밀번호\r\n            <br />\r\n            찾기\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n\r\n// class Main extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             id: \"\",\r\n//             pw: \"\"\r\n//         }\r\n//     }\r\n\r\n//     handleId = e => {\r\n//         this.setState({ id: e.target.value });\r\n//     };\r\n\r\n//     handlePw = e => {\r\n//         this.setState({ pw: e.target.value });\r\n//     };\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n//         console.log(\"클릭함\");\r\n\r\n//         const login_info = {\r\n//             method: \"POST\",\r\n//             body: JSON.stringify(this.state),\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             }\r\n//         };\r\n\r\n//         fetch(\"http://localhost:9089/login\", login_info)\r\n//             .then(res => {\r\n//                 return res.json();\r\n//             })\r\n//             .then(json => {\r\n//                 //json형식 {idx: 8, nickname: \"noh\", email: \"noh@gmail.com\", success: true}\r\n//                 if (json.success === true) {\r\n//                     alert(\"로그인되었습니다\");\r\n//                     // 서버로 부터 받은 JSON형태의 데이터를 로컬스토리지에 우선 저장한다.\r\n//                     window.localStorage.setItem('dump', JSON.stringify(json))\r\n//                     //스테이트에 유저정보를 저장한다.\r\n//                     this.setState({\r\n//                         id: json.id,\r\n//                         pw: json.pw\r\n//                     });\r\n//                     this.props.history.push(\"/Community\")\r\n//                 } else {\r\n//                     alert(\"아이디 혹은 비밀번호를 확인하세요\");\r\n//                 }\r\n//             });\r\n//     };\r\n\r\n//     render() {\r\n\r\n//         const onClickRedirectPathHandler = name => e => {\r\n//             window.scrollTo(0, 0);\r\n//             this.props.history.push(name);\r\n//         };\r\n\r\n//         return (\r\n//             <div className=\"App\">\r\n//                 <div className=\"logo\">\r\n//                     <p className=\"logo_en\">NaReBar</p>\r\n//                     <p className=\"logo_ko\">나만의 레시피 바텐더</p>\r\n//                 </div>\r\n\r\n//                 <div className=\"login\">\r\n//                     <form onSubmit={this.handleSubmit}>\r\n//                         <div>\r\n//                             <input id=\"id\" type=\"text\" name=\"id\" placeholder=\"ID\" value={this.state.id} onChange={this.handleId}></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <input id=\"pw\" type=\"password\" name=\"pw\" placeholder=\"PASSWORD\" value={this.state.pw} onChange={this.handlePw}></input>\r\n//                         </div>\r\n//                         <button id=\"login_btn\" type=\"submit\">LOGIN</button>\r\n\r\n//                     </form>\r\n//                 </div>\r\n\r\n//                 <div className=\"link_div\">\r\n//                     <div id=\"signup\" onClick={onClickRedirectPathHandler('/SignUp')}>SIGN UP</div>\r\n//                     <div id=\"findpw\" onClick={onClickRedirectPathHandler('/FindPW')}>FIND PASSWORD</div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     };\r\n// };\r\n\r\n// export default Main;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n    & .logoGrid {\r\n        // margin-top: 60px;\r\n        // margin-bottom: 20px;\r\n        height: 100px;\r\n        background-color: rgb(56, 97, 149);\r\n        color: white;\r\n    }\r\n\r\n    & #logo {\r\n        margin-top: 30px;\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport Wrapper from \"./styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport '../../index.css';\r\n\r\nconst useStyles = makeStyles({\r\n    logotext: {\r\n        fontFamily: 'Cafe24Ohsquare'\r\n    }\r\n})\r\n\r\nconst Header = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} className=\"logoGrid\">\r\n          <p className={classes.logotext} id=\"logo\">NaReBar</p>\r\n        </Grid>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n    & .myAppbar {\r\n    //    margin-top: 0;\r\n    }\r\n\r\n    & .navTabs {\r\n        background-color: rgb(255, 255, 255);\r\n    }\r\n\r\n    & .myTab {\r\n        font-size: 20px;\r\n        height: 50px;\r\n    }\r\n    & .myTab:hover {\r\n        text-decoration: none;\r\n    }\r\n\r\n`;\r\n\r\nexport default Wrapper;","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .list-box {\r\n    padding-left: 10%;\r\n    padding-right: 10%;\r\n  }\r\n\r\n  & .list-card {\r\n    margin-bottom: 20%;\r\n    padding: 10%;\r\n    border: solid 1px #9b9b9b;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  & .list-user {\r\n    display: flex;\r\n    justify-content: start;\r\n    margin-left: 2%;\r\n    padding-bottom: 4%;\r\n    width: 100%;\r\n    border-bottom: solid 1px #9b9b9b;\r\n  }\r\n\r\n  & .list-item {\r\n    /* display: flex; */\r\n    margin-bottom: 4%;\r\n  }\r\n\r\n  & .list-item-image {\r\n    width: 100%;\r\n    padding: 10% 10%;\r\n    /* padding-bottom: 10%; */\r\n    border-bottom: solid 1px #9b9b9b;\r\n  }\r\n\r\n  & .list-item-detail {\r\n    // flex-direction: column;\r\n    // display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n\r\n  & .like-button {\r\n    margin-left: 2%;\r\n    margin-right: 2%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & .detail-content {\r\n    font-size: 1em;\r\n    padding: 10% 0;\r\n    width: 100%;\r\n    border-bottom: solid 1px #9b9b9b;\r\n  }\r\n\r\n  & .more-tag {\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: #727272;\r\n  }\r\n\r\n  & .cname {\r\n    font-weight: 600;\r\n    font-size: 1.3em;\r\n  }\r\n\r\n  & .comments-box {\r\n    margin-top: 5%;\r\n  }\r\n\r\n  & .comment-username {\r\n    margin: 0 2%;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .list-box {\r\n    padding-left: 0%;\r\n    padding-right: 0%;\r\n  }\r\n\r\n  & .list-card {\r\n    margin-bottom: 20%;\r\n    padding: 10%;\r\n    border: solid 1px #9b9b9b;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  & .list-user {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-left: 2%;\r\n    margin: 0;\r\n    padding-bottom: 15px;\r\n    width: 100%;\r\n    border-bottom: solid 1px #9b9b9b;\r\n  }\r\n\r\n  & .list-item {\r\n    /* display: flex; */\r\n    margin-bottom: 4%;\r\n  }\r\n\r\n  & .list-item-imageBox {\r\n    width: 63.75vw;\r\n    height: 63.75vw;\r\n    padding: 10% 5%;\r\n    overflow: hidden;\r\n    /* padding-bottom: 10%; */\r\n    border-bottom: solid 1px #9b9b9b;\r\n  }\r\n\r\n  & .list-item-image {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0;\r\n    /* padding-bottom: 10%; */\r\n    /* border-bottom: solid 1px #9b9b9b; */\r\n  }\r\n\r\n  & .list-item-detail {\r\n    /* flex-direction: column;\r\n    display: flex; */\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n\r\n  & .like-button {\r\n    margin-left: 2%;\r\n    margin-right: 2%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & .detail-content {\r\n    font-size: 1em;\r\n    padding: 10% 0;\r\n    width: 100%;\r\n    border-bottom: solid 1px #9b9b9b;\r\n  }\r\n\r\n  & .more-tag {\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: #727272;\r\n  }\r\n\r\n  & .cname {\r\n    font-weight: 600;\r\n    font-size: 1.3em;\r\n  }\r\n\r\n  & .more-comment {\r\n    color: black;\r\n  }\r\n\r\n  & .countLikeIt1 {\r\n    font-weight: 600;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  & .to-update-button {\r\n    padding: 50px;\r\n  }\r\n\r\n  & .ingredient-title {\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    text-align: left;\r\n    margin: 2vw 0;\r\n  }\r\n\r\n  & .ingredient-box {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 2vw 2vw;\r\n    border-bottom: 1px dotted #9b9b9b;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .comments-box {\r\n    margin-top: 4px;\r\n  }\r\n\r\n  & .comment-single {\r\n    margin-top: 4px;\r\n  }\r\n\r\n  & .comment-username {\r\n    margin: 0 8px;\r\n    font-weight: 600;\r\n  }\r\n\r\n  & .more-comment {\r\n    margin-left: 8px;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: #727272;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .comment-list-header {\r\n    border-bottom: solid 0.5px #dddddd;\r\n    padding: 10px 5px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    background-color: #fcfcfc;\r\n  }\r\n\r\n  & .comment-list-header-arrow {\r\n    font-size: 45px;\r\n  }\r\n\r\n  & .comment-list-header-title {\r\n    margin-left: 15px;\r\n    font-size: 30px;\r\n  }\r\n\r\n  & .comment-list-box {\r\n    margin: 20px 10px;\r\n    margin-bottom: 70px;\r\n  }\r\n\r\n  & .comment-single {\r\n    margin: 11px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & .comment-single-left {\r\n    width: 100%;\r\n    /* margin: auto; */\r\n    /* display: flex; */\r\n  }\r\n\r\n  & .comment-single-left-1 {\r\n    /* width: auto; */\r\n    /* display: inline; */\r\n  }\r\n\r\n  & .comment-single-left-2 {\r\n    /* width: auto; */\r\n    height: 13px;\r\n  }\r\n\r\n  & .comment-avata {\r\n    font-size: 40px;\r\n  }\r\n\r\n  & .comment-username {\r\n    display: flex;\r\n    font-weight: 900;\r\n    margin-left: 3.3px;\r\n  }\r\n\r\n  & .comment-content {\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    margin-left: 3.3px;\r\n  }\r\n\r\n  & .comment-likeIt {\r\n    margin: auto;\r\n  }\r\n\r\n  & .comment-createdTime {\r\n    font-size: 10px;\r\n    margin-left: 5.5px;\r\n    margin-right: 20px;\r\n    float: left;\r\n  }\r\n\r\n  & .comment-likeIt-count {\r\n    font-size: 1vh;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .comment-list-header {\r\n    border-bottom: solid 0.5px #dddddd;\r\n    padding: 10px 5px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    background-color: #fcfcfc;\r\n  }\r\n\r\n  & .comment-list-header-arrow {\r\n    font-size: 45px;\r\n  }\r\n\r\n  & .comment-list-header-title {\r\n    margin-left: 15px;\r\n    font-size: 30px;\r\n  }\r\n\r\n  & .comment-list-box {\r\n    margin: 20px 10px;\r\n    margin-bottom: 70px;\r\n  }\r\n\r\n  & .comment-single {\r\n    margin: 11px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & .comment-single-left {\r\n    width: 100%;\r\n    /* margin: auto; */\r\n    /* display: flex; */\r\n  }\r\n\r\n  & .comment-single-left-1 {\r\n    /* width: auto; */\r\n    /* display: inline; */\r\n  }\r\n\r\n  & .comment-single-left-2 {\r\n    /* width: auto; */\r\n    height: 13px;\r\n  }\r\n\r\n  & .comment-avata {\r\n    font-size: 40px;\r\n  }\r\n\r\n  & .comment-username {\r\n    display: flex;\r\n    font-weight: 900;\r\n    margin-left: 3.3px;\r\n  }\r\n\r\n  & .comment-content {\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    margin-left: 3.3px;\r\n  }\r\n\r\n  & .comment-likeIt {\r\n    margin: auto;\r\n  }\r\n\r\n  & .comment-createdTime {\r\n    font-size: 11px;\r\n    margin-left: 5.5px;\r\n    margin-right: 20px;\r\n    float: left;\r\n  }\r\n\r\n  & .comment-likeIt-count {\r\n    font-size: 11px;\r\n    margin-right: 20px;\r\n    float: left;\r\n    font-weight: 600;\r\n  }\r\n\r\n  & .comment-reply {\r\n    font-size: 11px;\r\n    float: left;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .replys-box {\r\n    margin-top: 4.5px;\r\n    margin-left: 47px;\r\n  }\r\n\r\n  /* & .reply-single {\r\n    margin-top: 1%;\r\n  }\r\n\r\n  & .reply-username {\r\n    margin: 0 2%;\r\n    font-weight: 600;\r\n  } */\r\n\r\n  & .more-reply {\r\n    margin-left: 10px;\r\n    text-decoration: none;\r\n    font-weight: 400;\r\n    color: #727272;\r\n    font-size: 13px;\r\n    /* border-inline: solid 1px black; */\r\n  }\r\n\r\n  & .reply-single {\r\n    margin: 11px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  & .reply-single-left {\r\n    width: 100%;\r\n    /* display: flex; */\r\n  }\r\n\r\n  & .reply-single-left-2 {\r\n    /* width: auto; */\r\n    height: 13px;\r\n  }\r\n\r\n  & .reply-avata {\r\n    font-size: 35px;\r\n  }\r\n\r\n  & .reply-username {\r\n    display: flex;\r\n    font-weight: 900;\r\n    margin-left: 3.3px;\r\n    /* float: left; */\r\n  }\r\n\r\n  & .reply-content {\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    margin-left: 3.3px;\r\n\r\n    /* width: auto; */\r\n  }\r\n\r\n  & .reply-likeIt {\r\n    margin: auto;\r\n  }\r\n\r\n  & .reply-createdTime {\r\n    font-size: 10px;\r\n    margin-left: 5.5px;\r\n    margin-right: 20px;\r\n    float: left;\r\n  }\r\n\r\n  & .reply-likeIt-count {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useState, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport AccountCircleTwoToneIcon from \"@material-ui/icons/AccountCircleTwoTone\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nexport default function (props) {\r\n  const [myIndex, setMyIndex] = useState(2);\r\n\r\n  function moreComment() {\r\n    setMyIndex(myIndex + 2);\r\n    console.log(myIndex);\r\n  }\r\n\r\n  const [showReplysBool, setshowReplysBool] = useState(false);\r\n  let showReplys = null;\r\n  if (!showReplysBool) {\r\n    // console.log(\"폴스!!\");\r\n    if (myIndex < props.replys.length && props.replys.length > 2) {\r\n      showReplys = (\r\n        <span className=\"more-reply\" onClick={moreComment}>\r\n          이전 답글 {props.replys.length - myIndex}개 보기\r\n        </span>\r\n      );\r\n    }\r\n    if (props.replys.length > 2 && myIndex >= props.replys.length) {\r\n      // console.log(\"숨기기\");\r\n      showReplys = (\r\n        <span className=\"more-reply\" onClick={switcher}>\r\n          답글 숨기기\r\n        </span>\r\n      );\r\n    }\r\n  } else {\r\n    console.log(\"트루\");\r\n    showReplys = (\r\n      <span className=\"more-reply\" onClick={switcher}>\r\n        답글 {props.replys.length}개 보기\r\n      </span>\r\n    );\r\n  }\r\n\r\n  function switcher() {\r\n    setshowReplysBool(!showReplysBool);\r\n    console.log(showReplysBool);\r\n  }\r\n\r\n  let replys = props.replys.reverse().map((reply, idx) => {\r\n    function getTime(myTime) {\r\n      let theTime = null;\r\n\r\n      const now = new Date();\r\n      const old = new Date(myTime);\r\n      const gap = now - old;\r\n      const sec_gap = Math.floor(gap / 1000);\r\n      const min_gap = Math.floor(sec_gap / 60);\r\n      const hour_gap = Math.floor(min_gap / 60);\r\n      const day_gap = Math.floor(hour_gap / 24);\r\n      const mon_gap = Math.floor(day_gap / 12);\r\n\r\n      // console.log(sec_gap, min_gap, hour_gap, day_gap, mon_gap);\r\n      // console.log(old, now);\r\n      if (mon_gap >= 1) {\r\n        theTime = (\r\n          <span className=\"comment-createdTime\" key={idx}>\r\n            {mon_gap}월 전\r\n          </span>\r\n        );\r\n      } else {\r\n        if (day_gap >= 1) {\r\n          theTime = (\r\n            <span className=\"comment-createdTime\" key={idx}>\r\n              {day_gap}일 전\r\n            </span>\r\n          );\r\n        } else {\r\n          if (hour_gap >= 1) {\r\n            theTime = (\r\n              <span className=\"comment-createdTime\" key={idx}>\r\n                {hour_gap}시간 전\r\n              </span>\r\n            );\r\n          } else {\r\n            if (min_gap >= 1) {\r\n              theTime = (\r\n                <span className=\"comment-createdTime\" key={idx}>\r\n                  {min_gap}분 전\r\n                </span>\r\n              );\r\n            } else {\r\n              if (sec_gap >= 1) {\r\n                theTime = (\r\n                  <span className=\"comment-createdTime\" key={idx}>\r\n                    {sec_gap}초 전\r\n                  </span>\r\n                );\r\n              } else {\r\n                theTime = (\r\n                  <span className=\"comment-createdTime\" key={idx}>\r\n                    등록 중\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return <div>{theTime}</div>;\r\n    }\r\n\r\n    let likeButton = null;\r\n    let countLikeIt1 = null;\r\n    if (reply.LIKE.length) {\r\n      likeButton = (\r\n        <FavoriteIcon\r\n          onClick={() => props.likeIt(reply)}\r\n          color=\"error\"\r\n          key={idx}\r\n        />\r\n      );\r\n      countLikeIt1 = (\r\n        <span className=\"comment-likeIt-count\">\r\n          좋아요 {reply.LIKE.length}개\r\n        </span>\r\n      );\r\n    } else {\r\n      likeButton = (\r\n        <FavoriteBorderIcon onClick={() => props.likeIt(reply)} key={idx} />\r\n      );\r\n    }\r\n    if (showReplysBool === false && idx < myIndex) {\r\n      return (\r\n        <div className=\"reply-single\" key={idx}>\r\n          <AccountCircleTwoToneIcon className=\"reply-avata\" fontSize=\"large\" />\r\n          <div className=\"reply-single-left\">\r\n            <div className=\"reply-single-left-1\">\r\n              <div className=\"reply-username\">\r\n                {reply.username}\r\n                <div className=\"reply-content\">{reply.content}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"reply-single-left-2\">\r\n              {/* <div className=\"reply-createdTime\">작성시간</div> */}\r\n              {getTime(reply.created_at)}\r\n              {countLikeIt1}\r\n            </div>\r\n          </div>\r\n          <div className=\"reply-likeIt\">{likeButton}</div>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid className=\"replys-box\">\r\n        {/* {props.replys.length} {myIndex} */}\r\n        {showReplys}\r\n        {replys}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Wrapper from \"./style\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport AccountCircleTwoToneIcon from \"@material-ui/icons/AccountCircleTwoTone\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nimport ReplyList from \"../../../Community/ReplyList/\";\r\n\r\nexport default function (props) {\r\n  let comments = props.comments.map((comment, idx) => {\r\n    let likeButton = null;\r\n    let countLikeIt1 = null;\r\n    if (comment.LIKE.length) {\r\n      likeButton = (\r\n        <FavoriteIcon onClick={() => likeIt(comment)} color=\"error\" key={idx} />\r\n      );\r\n      countLikeIt1 = (\r\n        <span className=\"comment-likeIt-count\">\r\n          좋아요 {comment.LIKE.length}개\r\n        </span>\r\n      );\r\n    } else {\r\n      likeButton = (\r\n        <FavoriteBorderIcon onClick={() => likeIt(comment)} key={idx} />\r\n      );\r\n    }\r\n\r\n    function likeIt(thisComment) {\r\n      // alert(\"눌럿어?\");\r\n      props.likeSubmit(thisComment);\r\n    }\r\n\r\n    function getTime(myTime) {\r\n      let theTime = null;\r\n\r\n      const now = new Date();\r\n      const old = new Date(myTime);\r\n      const gap = now - old;\r\n      const sec_gap = Math.floor(gap / 1000);\r\n      const min_gap = Math.floor(sec_gap / 60);\r\n      const hour_gap = Math.floor(min_gap / 60);\r\n      const day_gap = Math.floor(hour_gap / 24);\r\n      const mon_gap = Math.floor(day_gap / 12);\r\n\r\n      // console.log(sec_gap, min_gap, hour_gap, day_gap, mon_gap);\r\n      // console.log(old, now);\r\n      if (mon_gap >= 1) {\r\n        theTime = (\r\n          <span className=\"comment-createdTime\" key={idx}>\r\n            {mon_gap}월 전\r\n          </span>\r\n        );\r\n      } else {\r\n        if (day_gap >= 1) {\r\n          theTime = (\r\n            <span className=\"comment-createdTime\" key={idx}>\r\n              {day_gap}일 전\r\n            </span>\r\n          );\r\n        } else {\r\n          if (hour_gap >= 1) {\r\n            theTime = (\r\n              <span className=\"comment-createdTime\" key={idx}>\r\n                {hour_gap}시간 전\r\n              </span>\r\n            );\r\n          } else {\r\n            if (min_gap >= 1) {\r\n              theTime = (\r\n                <span className=\"comment-createdTime\" key={idx}>\r\n                  {min_gap}분 전\r\n                </span>\r\n              );\r\n            } else {\r\n              if (sec_gap >= 1) {\r\n                theTime = (\r\n                  <span className=\"comment-createdTime\" key={idx}>\r\n                    {sec_gap}초 전\r\n                  </span>\r\n                );\r\n              } else {\r\n                theTime = (\r\n                  <span className=\"comment-createdTime\" key={idx}>\r\n                    등록 중\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return <div>{theTime}</div>;\r\n    }\r\n\r\n    return (\r\n      <div key={idx}>\r\n        <div className=\"comment-single\">\r\n          <AccountCircleTwoToneIcon\r\n            className=\"comment-avata\"\r\n            fontSize=\"large\"\r\n          />\r\n          <div className=\"comment-single-left\">\r\n            <div className=\"comment-single-left-1\">\r\n              <div className=\"comment-username\">\r\n                {comment.username}\r\n                <div className=\"comment-content\">{comment.content}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"comment-single-left-2\">\r\n              {getTime(comment.created_at)}\r\n              {countLikeIt1}\r\n              <span\r\n                className=\"comment-reply\"\r\n                onClick={() => props.doReply(comment)}\r\n              >\r\n                답글 달기\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"comment-likeIt\">{likeButton}</div>\r\n        </div>\r\n        <div>\r\n          <ReplyList replys={comment.replys} likeIt={likeIt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <Wrapper>{comments}</Wrapper>;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .comment-form-footer {\r\n    position: fixed;\r\n    bottom: 0%;\r\n    padding: 1.5% 2.5%;\r\n    border-top: solid 0.5px #dddddd;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: white;\r\n  }\r\n\r\n  & .comment-form-avata {\r\n    font-size: 35px;\r\n  }\r\n\r\n  & .comment-form-input {\r\n    margin: 0 2.5%;\r\n    border: none;\r\n    width: 77.5%;\r\n    word-wrap: break-word;\r\n    /* height: 100%; */\r\n  }\r\n\r\n  & .comment-form-register {\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: #88c4ff;\r\n  }\r\n\r\n  & .comment-form-register2 {\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: #0080ff;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Wrapper from \"./style\";\r\nimport axios from \"axios\";\r\n\r\nimport FaceOutlinedIcon from \"@material-ui/icons/FaceOutlined\";\r\n\r\nexport default function (props) {\r\n  // console.log(\"props\", props);\r\n  // function handleSubmit(data) {\r\n  //   console.log(data);\r\n  // }\r\n  let a = null;\r\n  if (props.commentInput.content) {\r\n    a = (\r\n      <span\r\n        className=\"comment-form-register2\"\r\n        onClick={() => props.handleSubmit(props.commentInput)}\r\n      >\r\n        등록\r\n      </span>\r\n    );\r\n  } else {\r\n    a = (\r\n      <span\r\n        className=\"comment-form-register\"\r\n        onClick={() => props.handleSubmit(props.commentInput)}\r\n      >\r\n        등록\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"comment-form-footer\">\r\n        <FaceOutlinedIcon className=\"comment-form-avata\" />\r\n        <input\r\n          className=\"comment-form-input\"\r\n          type=\"text\"\r\n          name=\"comment-content\"\r\n          placeholder=\"댓글 달기...\"\r\n          value={props.commentInput.content}\r\n          onChange={({ target: { value } }) =>\r\n            props.setCommentInput({ ...props.commentInput, content: value })\r\n          }\r\n        />\r\n        {a}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\n// class CommentForm extends Component {\r\n//   // num = 3; //모든 input 제어\r\n//   state = { input1: \"\", input2: \"\" };\r\n//   handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   }; //추가 명령을 수행할 함수\r\n//   handleCreate = (data) => {\r\n//     data.preventDefault();\r\n//     // this.state.num++;\r\n//     // const { input1, input2, list } = this.state;\r\n//   };\r\n//   render() {\r\n//     const { handleChange, handleCreate } = this;\r\n//     const { input1, input2 } = this.state;\r\n//     return (\r\n//       <Wrapper>\r\n//         <div className=\"comment-form-footer\">\r\n//           <FaceOutlinedIcon className=\"comment-form-avata\" />\r\n//           <input\r\n//             className=\"comment-form-input\"\r\n//             type=\"text\"\r\n//             name=\"comment-content\"\r\n//             placeholder=\"댓글 달기...\"\r\n//             // value={this.state.activeItem.description}\r\n//             // onChange={this.handleChange}\r\n//           />\r\n//           <a href=\"#\" className=\"comment-form-register\">\r\n//             등록\r\n//           </a>\r\n//         </div>\r\n//       </Wrapper>\r\n//     );\r\n//   }\r\n// }\r\n// export default CommentForm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Wrapper from \"./style\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport ArrowBackOutlinedIcon from \"@material-ui/icons/ArrowBackOutlined\";\r\nimport AccountCircleTwoToneIcon from \"@material-ui/icons/AccountCircleTwoTone\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nimport CommentList from \"../../components/Community/Comment/CommentList/\";\r\nimport CommentForm from \"../../components/Community/Comment/CommentForm/\";\r\nimport ReplyList from \"../../components/Community/ReplyList/\";\r\nimport { CommonContext } from \"../../context/CommonContext\";\r\n\r\nexport default function (props) {\r\n  const { serverUrl, user } = useContext(CommonContext);\r\n  const [listComment, setListComment] = useState([]);\r\n  const [commentInput, setCommentInput] = useState({\r\n    content: \"\",\r\n    article: props.location.state.article,\r\n    parent: null,\r\n    user: 1,\r\n  });\r\n\r\n  function handleChangeCommentInput(e) {\r\n    // console.log(e.content);\r\n    setCommentInput({\r\n      ...commentInput,\r\n      content: e.content,\r\n    });\r\n    // console.log(\"commentinput\", commentInput);\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, []);\r\n\r\n  function goBack() {\r\n    props.history.goBack();\r\n  }\r\n\r\n  function refreshList() {\r\n    axios\r\n      .get(`${serverUrl}/community/comment/`, {\r\n        headers: {\r\n          Authorization: `JWT ${user.token}`,\r\n        },\r\n        params: {\r\n          article: props.location.state.article,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setListComment(res.data);\r\n        console.log(listComment);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleSubmit(data) {\r\n    axios\r\n      .post(`${serverUrl}/community/comment/`, data, {\r\n        headers: {\r\n          Authorization: `JWT ${user.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        commentInput.content = \"\";\r\n        refreshList();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function likeSubmit(comment) {\r\n    console.log(comment);\r\n    axios\r\n      .post(\r\n        `${serverUrl}/community/comment/${comment.id}/`,\r\n        { user: comment.user }, // 현재 유저 정보 넣기\r\n        {\r\n          headers: {\r\n            Authorization: `JWT ${user.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        refreshList();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function doReply(reply) {\r\n    setCommentInput({\r\n      ...commentInput,\r\n      content: \"@\" + reply.username + \" \",\r\n      parent: reply.id,\r\n    });\r\n    console.log(commentInput);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        <div className=\"comment-list-header\">\r\n          <ArrowBackOutlinedIcon\r\n            className=\"comment-list-header-arrow\"\r\n            fontSize=\"large\"\r\n            onClick={goBack}\r\n          />\r\n          <span className=\"comment-list-header-title\">댓글</span>\r\n        </div>\r\n        <div className=\"comment-list-box\">\r\n          <CommentList\r\n            comments={listComment}\r\n            likeSubmit={likeSubmit}\r\n            doReply={doReply}\r\n          />\r\n        </div>\r\n        <CommentForm\r\n          commentInput={commentInput}\r\n          // setCommentInput={this.state.setCommentInput}\r\n          setCommentInput={handleChangeCommentInput}\r\n          handleSubmit={handleSubmit} // 부모에서 자식으로 부모 이벤트 넘겨줄 떄 자식에선 'props.부모이벤트' 로 사용\r\n          // this.setState({ listComment: res.data });\r\n        />\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport CommentDisplay from \"../../../../pages/CommentDisplay\";\r\n\r\nexport default function (props) {\r\n  // console.log(props);\r\n  return (\r\n    <Wrapper>\r\n      <Grid className=\"comments-box\">\r\n        {props.comments.length > 0 && (\r\n          <Link\r\n            className=\"more-comment\"\r\n            to={{\r\n              pathname: \"/Community/Comment\",\r\n              state: {\r\n                comments: props.comments,\r\n                article: props.article.id,\r\n              },\r\n            }}\r\n          >\r\n            댓글 {props.comments.length}개 모두 보기\r\n          </Link>\r\n        )}\r\n\r\n        {props.comments.map((comment, idx) => {\r\n          if (idx < 2) {\r\n            return (\r\n              <div className=\"comment-single\" key={idx}>\r\n                <span className=\"comment-username\">{comment.username}</span>\r\n                {comment.content}\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .to-update-button {\r\n    padding: 50px;\r\n    size: 100px;\r\n  }\r\n\r\n  & .a {\r\n    font-size: 100px;\r\n    background-color: white;\r\n    padding: 100px;\r\n    /* backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5], */\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  paper: {\r\n    // backgroundColor: theme.palette.background.paper,\r\n    // border: \"2px solid #000\",\r\n    // boxShadow: theme.shadows[5],\r\n    // padding: theme.spacing(2, 4, 3),\r\n  },\r\n  Button: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    width: \"70vw\",\r\n    height: \"15vw\",\r\n    padding: \"0 2vw\",\r\n    fontSize: \"4vw\",\r\n    textAlign: \"left\",\r\n    float: \"left\",\r\n    border: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MoreVertIcon onClick={handleOpen}></MoreVertIcon>\r\n      <Modal\r\n        disableEnforceFocus\r\n        disableAutoFocus\r\n        // aria-labelledby=\"transition-modal-title\"\r\n        // aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        disableAutoFocus\r\n        // closeAfterTransition\r\n        // BackdropComponent={Backdrop}\r\n        // BackdropProps={{\r\n        //   timeout: 500,\r\n        // }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <div>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/Community/Create\",\r\n                  state: {\r\n                    article: props.item,\r\n                  },\r\n                }}\r\n              >\r\n                <button className={classes.Button}>수정</button>\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className={classes.Button}\r\n                onClick={() => props.DeleteArticle(props.item)}\r\n              >\r\n                삭제\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport InsertCommentOutlinedIcon from \"@material-ui/icons/InsertCommentOutlined\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nimport CommentList from \"../../Comment/ArticleUnderCommentList\";\r\nimport MenuModal from \"../MenuModal/\";\r\n\r\nexport default function (props) {\r\n  // console.log(props.list);\r\n  let article = props.list.map((item, index) => {\r\n    // console.log(\"key\", index);\r\n    // console.log(\"item\", item);\r\n\r\n    // const [countLikeIt, setCountLikeIt] = useState(item.LIKE.length);\r\n    const [isSaveit, setSaveit] = useState(0);\r\n\r\n    let likeButton = null;\r\n    let countLikeIt1 = null;\r\n    if (item.LIKE.length) {\r\n      // 현재 유저가 item.LIKE에 있으면 1 없으면 0\r\n      likeButton = <FavoriteIcon onClick={likeIt} color=\"error\" key={index} />;\r\n      countLikeIt1 = (\r\n        <span className=\"countLikeIt1\">좋아요 {item.LIKE.length}개</span>\r\n      );\r\n    } else {\r\n      likeButton = <FavoriteBorderIcon onClick={likeIt} key={index} />;\r\n    }\r\n\r\n    function likeIt() {\r\n      // alert(\"눌럿어?\");\r\n      props.likeSubmit(item);\r\n      // setLikeIt(!isLikeit);\r\n      // if (item.LIKE.length) {\r\n      //   // 현재 유저가 item.LIKE에 있으면 1 없으면 0\r\n      //   setCountLikeIt(countLikeIt - 1);\r\n      // } else {\r\n      //   setCountLikeIt(countLikeIt + 1);\r\n      // }\r\n    }\r\n\r\n    let saveButton = null;\r\n    if (isSaveit) {\r\n      saveButton = <BookmarkIcon onClick={saveIt} />;\r\n    } else {\r\n      saveButton = <BookmarkBorderIcon onClick={saveIt} />;\r\n    }\r\n\r\n    function saveIt() {\r\n      setSaveit(!isSaveit);\r\n    }\r\n\r\n    let moreButton = (\r\n      <a className=\"more-tag\" href=\"#\" onClick={moreContent}>\r\n        더보기\r\n      </a>\r\n    );\r\n\r\n    const [myHide, setmyHide] = useState(moreButton);\r\n\r\n    const [cardContent, setCardContent] = useState(\r\n      item.detail.substring(0, 50) + \"...\"\r\n    );\r\n    const [ingredients, setIngredients] = useState(\"\");\r\n\r\n    function moreContent(e) {\r\n      setCardContent(\r\n        <div>\r\n          <div>{item.detail}</div>\r\n          <div className=\"ingredient-title\">[재료]</div>\r\n          <div className=\"ingredient-box\">\r\n            <span>{item.ingredient1}</span>\r\n            <span>{item.measure1}</span>\r\n          </div>\r\n          <div className=\"ingredient-box\">\r\n            <span>{item.ingredient2}</span>\r\n            <span>{item.measure2}</span>\r\n          </div>\r\n          <div className=\"ingredient-box\">\r\n            <span>{item.ingredient3}</span>\r\n            <span>{item.measure3}</span>\r\n          </div>\r\n          {item.ingredient4 && (\r\n            <div className=\"ingredient-box\">\r\n              <span>{item.ingredient4}</span>\r\n              <span>{item.measure4}</span>\r\n            </div>\r\n          )}\r\n          {item.ingredient5 && (\r\n            <div className=\"ingredient-box\">\r\n              <span>{item.ingredient5}</span>\r\n              <span>{item.measure5}</span>\r\n            </div>\r\n          )}\r\n          {item.ingredient6 && (\r\n            <div className=\"ingredient-box\">\r\n              <span>{item.ingredient6}</span>\r\n              <span>{item.measure6}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n      setIngredients(\"\");\r\n      console.log(myHide);\r\n      setmyHide(null);\r\n      e.preventDefault();\r\n    }\r\n\r\n    return (\r\n      <div className=\"list-card\" key={index}>\r\n        <div className=\"list-user\">\r\n          <div>\r\n            <AccountCircleIcon />\r\n            &nbsp;&nbsp;{item.username}\r\n          </div>\r\n          <div>\r\n            <MenuModal item={item} DeleteArticle={props.DeleteArticle} />\r\n          </div>\r\n        </div>\r\n        <div className=\"list-item\">\r\n          <div className=\"list-item-imageBox\">\r\n            {/* <img className=\"list-item-image\" src=\"images/sample.jpg\" alt=\"\" /> */}\r\n            <img className=\"list-item-image\" src={item.image} alt=\"\" />\r\n          </div>\r\n          <div className=\"list-item-detail\">\r\n            <div className=\"detail-content\">\r\n              <p className=\"cname\">\" {item.title} \"</p>\r\n              {cardContent}\r\n              {/* {cardContent.split(\"\\n\").map((line, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    {line}\r\n                    <br></br>\r\n                  </span>\r\n                );\r\n              })} */}\r\n              {myHide}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"like-button\">\r\n          <div>\r\n            {likeButton}\r\n            {/* {countLikeIt} */}\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Link\r\n              className=\"more-comment\"\r\n              to={{\r\n                pathname: \"/Community/Comment\",\r\n                state: {\r\n                  comments: item.comments,\r\n                  article: item.id,\r\n                },\r\n              }}\r\n            >\r\n              <InsertCommentOutlinedIcon />\r\n            </Link>\r\n          </div>\r\n          {saveButton}\r\n        </div>\r\n        <hr />\r\n        {countLikeIt1}\r\n        <CommentList comments={item.comments} article={item} />\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <Wrapper>\r\n      <Grid className=\"list-box\">{article}</Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nimport RecipieListDisplay from \"../RecipieListDisplay/\";\r\nimport { CommonContext } from \"../../../../context/CommonContext\";\r\n\r\nexport default function () {\r\n  const { serverUrl, user } = useContext(CommonContext);\r\n\r\n  const [articleList, setArticleList] = useState([]);\r\n  const [commentList, setCommentList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, []);\r\n\r\n  // componentDidMount() {\r\n  //   this.refreshList();\r\n  // }\r\n  function refreshList() {\r\n    axios\r\n      .get(`${serverUrl}/community/`, {\r\n        headers: {\r\n          Authorization: `JWT ${user.token}`,\r\n        },\r\n        // params: {\r\n        //   article: 1,\r\n        // },\r\n      })\r\n      .then((res) => {\r\n        setArticleList([]);\r\n        console.log(res.data);\r\n        setArticleList(res.data);\r\n        // console.log(this.state.loading);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function likeSubmit(article) {\r\n    console.log(article);\r\n    axios\r\n      .post(\r\n        `${serverUrl}/community/article/${article.id}/`,\r\n        { user: article.user }, // 현재 유저 정보 넣기\r\n        {\r\n          headers: {\r\n            Authorization: `JWT ${user.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        refreshList();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function reload() {\r\n    // const current = location.pathname;\r\n    // history.replace(`/reload`);\r\n    setTimeout(() => {\r\n      history.go(0);\r\n    });\r\n  }\r\n  let history = useHistory();\r\n\r\n  function DeleteArticle(article) {\r\n    console.log(article);\r\n    console.log(history);\r\n\r\n    axios\r\n      .delete(`${serverUrl}/community/${article.id}/`, {\r\n        headers: {\r\n          Authorization: `JWT ${user.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        refreshList();\r\n        window.scrollTo(0, 0);\r\n        history.push(\"/Main\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid className=\"list-box\">\r\n        <RecipieListDisplay\r\n          list={articleList}\r\n          likeSubmit={likeSubmit}\r\n          DeleteArticle={DeleteArticle}\r\n        />\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .go-articleForm-button {\r\n    position: fixed;\r\n    /* right: 50%; */\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    /* top: 0; */\r\n    bottom: 9%;\r\n\r\n    border: 0.5px solid #9b9b9b;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    background-color: whitesmoke;\r\n\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  & .create-button:hover {\r\n    background: rgb(56, 97, 182);\r\n\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nexport default function () {\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Link to=\"/Community/Create\">\r\n          <button className=\"go-articleForm-button\">\r\n            <CreateIcon color=\"secondary\" fontSize=\"small\" /> 레시피 추가\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../../layout/\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\n// import Logo from \"../../components/Logo/\";\r\n// import Nav from \"../../components/NavigationMenu/\";\r\nimport RecipeList from \"../../components/Community/Recipe/RecipeList/\";\r\nimport CreateArticleButton from \"../../components/Community/ArticleForm/CreateArticleButton/\";\r\n\r\nconst Community = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        {/* <Logo /> */}\r\n        {/* <Nav /> */}\r\n        <RecipeList />\r\n        <CreateArticleButton />\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px 0 20px;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  font-family: 'IBMPlexSansKR-Text';\r\n\r\n  * {\r\n    word-break: keep-all;\r\n  }\r\n  & .recipe {\r\n    padding: 10%;\r\n  }\r\n\r\n  & .listdiv {\r\n    // float: left;\r\n    display: inline-block;\r\n    width: 50%;\r\n  }\r\n\r\n  & .deletebtn {\r\n    float: right;\r\n  }\r\n\r\n  & .namediv {\r\n    position: relative;\r\n  }\r\n\r\n  & .iconbtndiv {\r\n    position: relative;\r\n    left:10px;\r\n    top: -38px;\r\n  }\r\n\r\n  & .sug {\r\n    font-size: 30px;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  @media(min-width: 700px) {\r\n\r\n    & .card {\r\n      width: 1000px;\r\n    }\r\n\r\n    & .card-img-top {\r\n      // width: 600px;\r\n      // height: 500px;\r\n    }\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .custom-control {\r\n    margin: 0 20px;\r\n  }\r\n\r\n  & .btn {\r\n    background-color: rgb(76, 127, 188);\r\n    text-decoration: none;\r\n    border: none;\r\n    color: white;\r\n    font-family: 'IBMPlexSansKR-Text';\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport Wrapper from \"./style\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst SyncButton = () => {\r\n\r\n  const handleSync = () => {\r\n    try {\r\n        // 연동하라는 어떤 신호를 보내겠지\r\n\r\n\r\n        console.log(\"동기화버튼 클릭\");\r\n        alert('동기화 성공');\r\n    } catch (e) {\r\n        alert('네트워크 연결에 문제가 있어 레시피 목록 동기화에 실패했습니다.');\r\n    }\r\n};\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid className=\"custom-control custom-switch\">\r\n        <Button variant=\"contained\" className=\"btn\" endIcon={<Icon>send</Icon>} onClick={handleSync}>레시피 동기화</Button>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SyncButton;\r\n","import React, { useState, useEffect, Fragment, useContext } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { ListGroup, ListGroupItem, Card } from \"react-bootstrap\";\r\nimport Wrapper from \"./styles\";\r\nimport SyncButton from \"../../components/SyncButton\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { MemoryRouter, Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PaginationItem from \"@material-ui/lab/PaginationItem\";\r\n\r\nimport { CommonContext } from \"../../context/CommonContext\";\r\nimport axios from \"axios\";\r\n\r\nconst MyBar = () => {\r\n  const { serverUrl, user } = useContext(CommonContext);\r\n  const [menuList, setMenuList] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const MyCocktail = menuList[index];\r\n\r\n  function refreshList() {\r\n    axios\r\n      .get(`${serverUrl}/accounts/user/current`, {\r\n        headers: {\r\n          Authorization: `JWT ${user.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setMenuList(res.data.like_articles);\r\n        console.log(menuList);\r\n      })\r\n      .catch((err) => console.log(err + \" 에러났음\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n    console.log(\"asda\");\r\n    if (menuList.length === 0) {\r\n      console.log(\"i don't know\");\r\n    }\r\n  }, []);\r\n\r\n  const deleteRecipe = (id) => (e) => {\r\n    try {\r\n      // 삭제하라는 어떤 신호를 보내겠지\r\n\r\n      console.log(\"삭제 버튼 클릭, id = \" + id);\r\n      alert(\"삭제 성공\");\r\n    } catch (e) {\r\n      alert(\"네트워크 연결에 문제가 있어 레시피 삭제에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  function igrList() {\r\n    return (\r\n      <Fragment>\r\n        {MyCocktail.strIngredient1 != \"null\" ? (\r\n          <ListGroupItem>\r\n            <div className=\"listdiv\">{MyCocktail.ingredient1}</div>\r\n            <div className=\"listdiv\">{MyCocktail.measure1} ml</div>\r\n          </ListGroupItem>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {MyCocktail.strIngredient2 != \"null\" ? (\r\n          <ListGroupItem>\r\n            <div className=\"listdiv\">{MyCocktail.ingredient2}</div>\r\n            <div className=\"listdiv\">{MyCocktail.measure1} ml</div>\r\n          </ListGroupItem>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {MyCocktail.strIngredient3 != \"null\" ? (\r\n          <ListGroupItem>\r\n            <div className=\"listdiv\">{MyCocktail.ingredient3}</div>\r\n            <div className=\"listdiv\">{MyCocktail.measure1} ml</div>\r\n          </ListGroupItem>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {MyCocktail.strIngredient4 != \"null\" ? (\r\n          <ListGroupItem>\r\n            <div className=\"listdiv\">{MyCocktail.strIngredient4}</div>\r\n            <div className=\"listdiv\">{MyCocktail.strMeasure4} ml</div>\r\n          </ListGroupItem>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {MyCocktail.strIngredient5 != \"null\" ? (\r\n          <ListGroupItem>\r\n            <div className=\"listdiv\">{MyCocktail.strIngredient5}</div>\r\n            <div className=\"listdiv\">{MyCocktail.strMeasure5} ml</div>\r\n          </ListGroupItem>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {MyCocktail.strIngredient6 != \"null\" ? (\r\n          <ListGroupItem>\r\n            <div className=\"listdiv\">{MyCocktail.strIngredient6}</div>\r\n            <div className=\"listdiv\">{MyCocktail.strMeasure6} ml</div>\r\n          </ListGroupItem>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* {menuList[1]} */}\r\n      {MyCocktail ? (\r\n        <Fragment>\r\n          <Grid container className=\"syncButtonGrid\" justify=\"flex-end\">\r\n            <SyncButton />\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            className=\"recipe\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <div className=\"namediv\">{MyCocktail.drink_name}</div>\r\n                  <div className=\"iconbtndiv\">\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      className=\"deletebtn\"\r\n                      onClick={deleteRecipe(MyCocktail.id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                </Card.Title>\r\n                <hr />\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={`http://localhost:8000${MyCocktail.image}`}\r\n                />\r\n                <hr />\r\n                <Card.Text>{MyCocktail.strInstructions}</Card.Text>\r\n              </Card.Body>\r\n              <ListGroup className=\"list-group-flush\">{igrList()}</ListGroup>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"center\" className=\"pagination\">\r\n            <MemoryRouter initialEntries={[\"/inbox\"]} initialIndex={0}>\r\n              <Route>\r\n                {({ location }) => {\r\n                  const query = new URLSearchParams(location.search);\r\n                  const page = parseInt(query.get(\"page\") || \"1\", 10);\r\n                  return (\r\n                    <Pagination\r\n                      size=\"small\"\r\n                      page={page}\r\n                      count={menuList.length}\r\n                      onChange={setIndex(page - 1)}\r\n                      renderItem={(item) => (\r\n                        <PaginationItem\r\n                          component={Link}\r\n                          to={`/inbox${\r\n                            item.page === 1 ? \"\" : `?page=${item.page}`\r\n                          }`}\r\n                          {...item}\r\n                        />\r\n                      )}\r\n                    />\r\n                  );\r\n                }}\r\n              </Route>\r\n            </MemoryRouter>\r\n          </Grid>\r\n        </Fragment>\r\n      ) : (\r\n        <div className=\"sug\">커뮤니티에서 레시피를 찜해보세요!</div>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MyBar;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Wrapper from \"./styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Community from \"../../pages/Community/\";\r\nimport MyBar from \"../../pages/MyBar/\";\r\n\r\nimport Portal from \"@material-ui/core/Portal\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={2}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // backgroundColor: 'white'\r\n    backgroundColor: theme.palette.background.paper,\r\n    // width: 500,\r\n  },\r\n}));\r\n\r\nexport default function NavigationTab() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Wrapper className={classes.root}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <AppBar className=\"myAppbar\" position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            className=\"navTabs\"\r\n          >\r\n            <Tab\r\n              /* component={Link} to=\"/Community\" */ label=\"Community\"\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              /* component={Link} to=\"/MyBar\" */ label=\"MyBar\"\r\n              {...a11yProps(1)}\r\n            />\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <Portal container={document.body}>\r\n              <Community></Community>\r\n            </Portal>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            <MyBar></MyBar>\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header/\";\r\nimport NavigationTab from \"./NavigationTab/\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Layout = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Header></Header>\r\n        {/* <NavigationTab></NavigationTab> */}\r\n        <div>{children}</div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Layout from \"../../layout/\";\r\nimport NavigationTab from \"../../layout/NavigationTab/\"\r\n\r\nconst Main = () => {\r\n\r\n  return (\r\n    <Layout>\r\n      <NavigationTab></NavigationTab>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n\r\n    & .signin{\r\n        height: 150px;\r\n    }\r\n\r\n    & .info{\r\n        \r\n    }\r\n\r\n    & .signin div {\r\n        margin-top: 65px;\r\n        // font-size: 40px;\r\n    }\r\n\r\n    & form div {\r\n        margin-top: 5px;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    & .submitBtn {\r\n        margin-top: 30px;\r\n        height: 50px;\r\n        width: 120px;\r\n        background-color: rgb(76, 127, 188);\r\n        text-decoration: none;\r\n        border: none;\r\n        color: white;\r\n        font-size: 20px;\r\n        font-family: 'IBMPlexSansKR-Text';\r\n    }\r\n\r\n    & .submitBtn:hover {\r\n        background-color: rgb(76, 127, 188);\r\n    }\r\n\r\n    & .resetBtn {\r\n        margin-top: 30px;\r\n        height: 50px;\r\n        width: 120px;\r\n        background-color: rgb(242, 242, 242);\r\n        text-decoration: none;\r\n        border: none;\r\n        color: black;\r\n        font-size: 20px;\r\n        font-family: 'IBMPlexSansKR-Text';\r\n    }\r\n\r\n    @media(min-width: 700px) {\r\n        & form {\r\n            margin: 0 auto; \r\n            width: 50%;\r\n        }\r\n\r\n    }\r\n    \r\n`;\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../../layout/Header/'\r\nimport Wrapper from \"./styles\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";import { makeStyles } from \"@material-ui/core/styles\";\r\nimport '../../index.css';\r\n\r\nconst useStyles = makeStyles({\r\n    signupText: {\r\n        fontFamily: 'IBMPlexSansKR-Text',\r\n        fontSize: '30px'\r\n    }\r\n})\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Wrapper>\r\n            <Header></Header>\r\n            <Grid container className=\"root\" justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} className=\"signin\">\r\n                    <div className={classes.signupText}>회원가입</div>\r\n                </Grid>\r\n                <Grid item xs={10} className=\"info\">\r\n                    <form>\r\n                        <div>\r\n                            <TextField required fullWidth id=\"id\" label=\"아이디\" variant=\"outlined\" autoFocus></TextField>\r\n                        </div>\r\n                        <div>\r\n                            <TextField required fullWidth id=\"pw\" label=\"비밀번호\" variant=\"outlined\" type=\"password\" ></TextField>\r\n                        </div>\r\n                        <div>\r\n                            <TextField required fullWidth id=\"name\" label=\"닉네임\" variant=\"outlined\" ></TextField>\r\n                        </div>\r\n                        <div>\r\n                            <TextField required fullWidth id=\"deviceNum\" label=\"기기번호\" variant=\"outlined\" ></TextField>\r\n                        </div>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item xs={6}>\r\n                                <Button type=\"submit\" variant=\"contained\" className=\"submitBtn\">등록</Button>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Button type=\"reset\" variant=\"contained\" className=\"resetBtn\">다시 입력</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n\r\n    & .findpw {\r\n        height: 150px;\r\n    }\r\n\r\n    & .findpw div {\r\n        margin-top: 60px;\r\n        font-size: 30px;\r\n        font-family: 'IBMPlexSansKR-Text';\r\n    }\r\n\r\n    & form div {\r\n        margin-top: 5px;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    & .submitBtn {\r\n        margin-top: 30px;\r\n        height: 50px;\r\n        width: 180px;\r\n        background-color: rgb(76, 127, 188);\r\n        text-decoration: none;\r\n        border: none;\r\n        color: white;\r\n        font-size: 20px;\r\n    }\r\n\r\n    & .submitBtn:hover {\r\n        background-color: rgb(76, 127, 188);\r\n    }\r\n\r\n    @media(min-width: 700px) {\r\n        & form {\r\n            margin: 0 auto; \r\n            width: 50%;\r\n        }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Header from '../../layout/Header/'\r\nimport Wrapper from \"./styles\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\n\r\nconst FindPW = () => {\r\n    return(\r\n        <Wrapper>\r\n            <Header></Header>\r\n            <Grid container className=\"root\" justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} className=\"findpw\">\r\n                    <div>비밀번호 찾기</div>\r\n                </Grid>\r\n\r\n                <Grid item xs={10} className=\"info\">\r\n                    <form>\r\n                        <div>\r\n                            <TextField required fullWidth id=\"id\" label=\"아이디\" variant=\"outlined\" autoFocus></TextField>\r\n                        </div>\r\n                        <div>\r\n                            <TextField required fullWidth id=\"deviceNum\" label=\"기기번호\" variant=\"outlined\" ></TextField>\r\n                        </div>\r\n                        <Button type=\"submit\" variant=\"contained\" className=\"submitBtn\">비밀번호 찾기</Button>\r\n                    </form>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default FindPW;","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    text-align: center;\r\n\r\n`;\r\n\r\nexport default Wrapper;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Wrapper from \"./styles\";\r\nimport Layout from \"../../layout/\";\r\n\r\nimport Header from \"../../layout/Header\";\r\n\r\nconst UploadRecipe = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      <Grid container justify=\"center\" alignItems=\"center\"></Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default UploadRecipe;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n\r\n  & .form-header-title {\r\n    margin-top: 35px;\r\n    font-size: 30px;\r\n    height: 60px;\r\n    font-family: 'IBMPlexSansKR-Text';\r\n  }\r\n\r\n  & #details {\r\n    // height: 200px;\r\n  }\r\n\r\n  & form div {\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & .form-row .col input::placeholder {\r\n    color: #a1a1a1;\r\n    font-weight: 500;\r\n  }\r\n\r\n  & .article-create-button {\r\n\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    height: 50px;\r\n    width: 120px;\r\n    background-color: rgb(76, 127, 188);\r\n    text-decoration: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 20px;\r\n    font-family: 'IBMPlexSansKR-Text';\r\n\r\n    // border: none;\r\n    // border-radius: 25px;\r\n    // padding: 7px 10px;\r\n    // background-color: rgb(56, 97, 182);\r\n    // height: 35px;\r\n    // font-size: 15px;\r\n    // color: white;\r\n  }\r\n\r\n  & .article-create-button:hover {\r\n    background-color: rgb(76, 127, 188);\r\n  }\r\n\r\n  & .resetBtn {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    height: 50px;\r\n    width: 120px;\r\n    background-color: rgb(242, 242, 242);\r\n    text-decoration: none;\r\n    border: none;\r\n    color: black;\r\n    font-size: 20px;\r\n    font-family: 'IBMPlexSansKR-Text';\r\n  }\r\n\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .input-footer {\r\n    /*  position: fixed; */\r\n    bottom: 0%;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  & .input-image-box {\r\n    /* position: absolute; */\r\n    /* bottom: 60px; */\r\n    /* margin-bottom: 60px; */\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  & .input-image {\r\n    /* max-width: 20%; */\r\n    /* overflow: hidden; */\r\n    width: 80vw;\r\n    height: 50vh;\r\n    border-radius: 25px;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\n// import tileData from \"./tileData\";\r\n\r\nimport Wrapper from \"./style\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   display: \"flex\",\r\n  //   flexWrap: \"wrap\",\r\n  //   justifyContent: \"space-around\",\r\n  //   overflow: \"hidden\",\r\n  //   backgroundColor: theme.palette.background.paper,\r\n  // },\r\n  // gridList: {\r\n  //   flexWrap: \"nowrap\",\r\n  //   // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n  //   transform: \"translateZ(0)\",\r\n  // },\r\n  // title: {\r\n  //   color: theme.palette.primary.light,\r\n  // },\r\n  // titleBar: {\r\n  //   background:\r\n  //     \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n  // },\r\n}));\r\n\r\nexport default function SingleLineGridList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className={classes.root}>\r\n        {props.temp.map((tile, idx) => (\r\n          <div className=\"input-image-box\" key={tile.id}>\r\n            <img className=\"input-image\" src={tile.value} alt={tile.title} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nimport Wrapper from \"./style\";\r\nimport InputImage from \"../InputImage/\";\r\n\r\nimport axios from \"axios\";\r\nimport { CommonContext } from \"../../../../context/CommonContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function ImageUploadButton(props) {\r\n  const { serverUrl, user } = useContext(CommonContext);\r\n\r\n  const classes = useStyles();\r\n  const [imgBase64, setImgBase64] = useState([]); // 파일 base64, web화면에 띄워주는 역할\r\n  const [imgFile, setImgFile] = useState(null); //파일\r\n\r\n  const handleChangeFile = (event) => {\r\n    // for (let i = 0; i < event.target.files.length; i++) {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장\r\n    setImgFile(event.target.files); // 파일 상태 업데이트\r\n    console.log(\"asdasdasd\", event.target.files[0]);\r\n\r\n    // const formData = new FormData();\r\n    // formData.append(\"name\", \"chris\");\r\n    // console.log(\"formData\", formData);\r\n\r\n    reader.onloadend = () => {\r\n      console.log(\"imgFile\", imgFile);\r\n      // 2. 읽기가 완료되면\r\n      console.log(\"reader\", reader);\r\n      const base64 = reader.result;\r\n      console.log(\"base64\", base64);\r\n      setImgBase64((imgBase64) => [\r\n        { id: imgBase64.length, value: base64.toString(\"base64\") },\r\n      ]); // 파일 base64 상태 업데이트\r\n\r\n      console.log(\"imgBase64\", imgBase64);\r\n      props.setArticleFormData({\r\n        ...props.articleFormData,\r\n        image: base64,\r\n      });\r\n    };\r\n    // }\r\n  };\r\n\r\n  const inputImage = imgBase64.map((item, index) => {\r\n    return (\r\n      <span key={index}>\r\n        <img className=\"input-image\" src={item.value} alt=\"\" />;\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* <div className=\"input-image-box\">{inputImage}</div> */}\r\n      <InputImage temp={imgBase64} />\r\n      <div className=\"input-footer\">\r\n        <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          // multiple\r\n          onChange={handleChangeFile}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <PhotoCamera fontSize=\"large\" />\r\n          </IconButton>\r\n        </label>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function (props) {\r\n  const [myNum, setMyNum] = useState(3);\r\n\r\n  useEffect(() => {\r\n    if (props.articleFormData.ingredient4) {\r\n      setMyNum(4);\r\n    }\r\n    if (\r\n      props.articleFormData.ingredient4 &&\r\n      props.articleFormData.ingredient5\r\n    ) {\r\n      setMyNum(5);\r\n    }\r\n    if (\r\n      props.articleFormData.ingredient4 &&\r\n      props.articleFormData.ingredient5 &&\r\n      props.articleFormData.ingredient6\r\n    ) {\r\n      setMyNum(6);\r\n    }\r\n  }, []);\r\n\r\n  console.log(myNum);\r\n\r\n  function moreInput(data) {\r\n    data.preventDefault();\r\n    if (myNum > 5) {\r\n      alert(\"재료는 6개를 초과할 수 없습니다.\");\r\n    } else {\r\n      setMyNum(myNum + 1);\r\n    }\r\n    console.log(myNum);\r\n  }\r\n\r\n  function updateField(index, e) {\r\n    console.log(\"index\", index);\r\n  }\r\n\r\n  let ingredient4 = null;\r\n  let ingredient5 = null;\r\n  let ingredient6 = null;\r\n\r\n  if (myNum >= 4) {\r\n    ingredient4 = (\r\n      <div class=\"form-row mb-2\">\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"재료명\"\r\n            value={props.articleFormData.ingredient4}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                ingredient4: value,\r\n              });\r\n            }}\r\n          ></input>\r\n          {/* {a} */}\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"용량(ml)\"\r\n            value={props.articleFormData.measure4}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                measure4: value,\r\n              });\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (myNum >= 5) {\r\n    ingredient5 = (\r\n      <div class=\"form-row mb-2\">\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"재료명\"\r\n            value={props.articleFormData.ingredient5}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                ingredient5: value,\r\n              });\r\n            }}\r\n          ></input>\r\n          {/* {a} */}\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"용량(ml)\"\r\n            value={props.articleFormData.measure5}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                measure5: value,\r\n              });\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (myNum >= 6) {\r\n    ingredient6 = (\r\n      <div class=\"form-row mb-2\">\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"재료명\"\r\n            value={props.articleFormData.ingredient6}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                ingredient6: value,\r\n              });\r\n            }}\r\n          ></input>\r\n          {/* {a} */}\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"용량(ml)\"\r\n            value={props.articleFormData.measure6}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                measure6: value,\r\n              });\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let listInput = (\r\n    <div>\r\n      <div class=\"form-row mb-2\">\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"재료명\"\r\n            value={props.articleFormData.ingredient1}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                ingredient1: value,\r\n              });\r\n            }}\r\n          ></input>\r\n          {/* {a} */}\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"용량(ml)\"\r\n            value={props.articleFormData.measure1}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                measure1: value,\r\n              });\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row mb-2\">\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"재료명\"\r\n            value={props.articleFormData.ingredient2}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                ingredient2: value,\r\n              });\r\n            }}\r\n          ></input>\r\n          {/* {a} */}\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"용량(ml)\"\r\n            value={props.articleFormData.measure2}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                measure2: value,\r\n              });\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row mb-2\">\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"재료명\"\r\n            value={props.articleFormData.ingredient3}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                ingredient3: value,\r\n              });\r\n            }}\r\n          ></input>\r\n          {/* {a} */}\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"용량(ml)\"\r\n            value={props.articleFormData.measure3}\r\n            onChange={({ target: { value } }) => {\r\n              props.setArticleFormData({\r\n                ...props.articleFormData,\r\n                measure3: value,\r\n              });\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      {ingredient4}\r\n      {ingredient5}\r\n      {ingredient6}\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <div>{listInput}</div>\r\n      <div>\r\n        <button onClick={moreInput}>추가</button>\r\n      </div>\r\n      {/* {this.state.num} */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nimport Wrapper from \"./style\";\r\nimport Header from \"../../layout/Header/\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ImageUploadBtn from \"../../components/Community/ArticleForm/ImageUploadButton/\";\r\n\r\nimport Temp1 from \"../../components/Community/ArticleForm/Temp1\";\r\nimport { CommonContext } from \"../../context/CommonContext\";\r\n\r\nexport default function (props) {\r\n  const [articleFormData, setArticleFormData] = useState({\r\n    id: null,\r\n    title: \"\",\r\n    detail: \"\",\r\n    drink_name: \"\",\r\n    user: 1,\r\n    ingredient1: \"\",\r\n    ingredient2: \"\",\r\n    ingredient3: \"\",\r\n    ingredient4: \"\",\r\n    ingredient5: \"\",\r\n    ingredient6: \"\",\r\n    measure1: \"\",\r\n    measure2: \"\",\r\n    measure3: \"\",\r\n    measure4: \"\",\r\n    measure5: \"\",\r\n    measure6: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  console.log(\"asd\", articleFormData);\r\n\r\n  function refreshList() {\r\n    if (props.location.state) {\r\n      const article = props.location.state.article;\r\n      setArticleFormData({\r\n        ...articleFormData,\r\n        id: article.id,\r\n        title: article.title,\r\n        detail: article.detail,\r\n        drink_name: article.title,\r\n        ingredient1: article.ingredient1,\r\n        ingredient2: article.ingredient2,\r\n        ingredient3: article.ingredient3,\r\n        ingredient4: article.ingredient4,\r\n        ingredient5: article.ingredient5,\r\n        ingredient6: article.ingredient6,\r\n        measure1: article.measure1,\r\n        measure2: article.measure2,\r\n        measure3: article.measure3,\r\n        measure4: article.measure4,\r\n        measure5: article.measure5,\r\n        measure6: article.measure6,\r\n      });\r\n    }\r\n  }\r\n\r\n  const { serverUrl, user } = useContext(CommonContext);\r\n\r\n  function goBack() {\r\n    props.history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unblock = props.history.block((location, action) => {\r\n      if (action === \"POP\") {\r\n        if (window.confirm(\"작성하던 내용이 없어집니다. 정말 떠나실건가요?\")) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      unblock();\r\n    };\r\n  }, [props.history]);\r\n\r\n  function handleSubmit(data) {\r\n    // console.log(data);\r\n\r\n    if (data.id) {\r\n      console.log(data);\r\n      axios\r\n        .put(`${serverUrl}/community/${data.id}/`, data, {\r\n          headers: {\r\n            Authorization: `JWT ${user.token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          props.history.push(\"/Main\");\r\n          // console.log(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      return;\r\n    }\r\n    axios\r\n      .post(`${serverUrl}/community/`, data, {\r\n        headers: {\r\n          Authorization: `JWT ${user.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        props.history.push(\"/Main\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header></Header>\r\n      <Grid container className=\"root\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} className=\"form-header-title\">\r\n          <div>나만의 레시피 만들기</div>\r\n          <p>\r\n            {/* id: {articleFormData.id}\r\n            title: {articleFormData.title}\r\n            detail: {articleFormData.detail}\r\n            drink_name: {articleFormData.drink_name}\r\n            user: {articleFormData.user} */}\r\n            {/* image: {articleFormData.image} */}\r\n            {/* ingredients: {articleFormData.ingredients2.ingredient} */}\r\n          </p>\r\n        </Grid>\r\n        {/* <div className=\"form-header\">\r\n            <Link to=\"/Community\">\r\n            <CloseIcon fontSize=\"large\" onClick={goBack} />\r\n            </Link>\r\n            <p className=\"form-header-title\">글 쓰기</p>\r\n          </div> */}\r\n\r\n        <Grid item xs={10}>\r\n          <form>\r\n            <div>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"칵테일 이름\"\r\n                variant=\"outlined\"\r\n                autoFocus\r\n                value={articleFormData.title}\r\n                onChange={({ target: { value } }) => {\r\n                  setArticleFormData({\r\n                    ...articleFormData,\r\n                    title: value,\r\n                  });\r\n                }}\r\n              ></TextField>\r\n            </div>\r\n            {/* {a.a} */}\r\n            <div>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"details\"\r\n                label=\"칵테일 소개\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                value={articleFormData.detail}\r\n                onChange={({ target: { value } }) => {\r\n                  setArticleFormData({\r\n                    ...articleFormData,\r\n                    detail: value,\r\n                    drink_name: value,\r\n                  });\r\n                }}\r\n              ></TextField>\r\n            </div>\r\n\r\n            <Temp1\r\n              setArticleFormData={setArticleFormData}\r\n              articleFormData={articleFormData}\r\n            />\r\n            <ImageUploadBtn\r\n              articleFormData={articleFormData}\r\n              setArticleFormData={setArticleFormData}\r\n            />\r\n\r\n            {/* <button className=\"article-create-button\">작성완료</button> */}\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  className=\"article-create-button\"\r\n                  onClick={() => {\r\n                    handleSubmit(articleFormData);\r\n                  }}\r\n                >\r\n                  공유하기\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button type=\"reset\" variant=\"contained\" className=\"resetBtn\">\r\n                  다시 입력\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Start from \"./pages/Start\";\r\nimport Main from \"./pages/Main/\";\r\nimport Community from \"./pages/Community/\";\r\nimport MyBar from \"./pages/MyBar/\";\r\nimport SignUp from \"./pages/SignUp/\";\r\nimport FindPW from \"./pages/FindPW/\";\r\nimport UploadRecipe from \"./pages/UploadRecipe/\";\r\nimport ArticleForm from \"./pages/ArticleForm/\";\r\nimport CommentDisplay from \"./pages/CommentDisplay/\";\r\n\r\nimport { useLocalStorageSetState } from \"./common/CommonHooks\";\r\nimport { CommonContext } from \"./context/CommonContext\";\r\n\r\nfunction App() {\r\n  const HOST = \"localhost:8000\";\r\n  const serverUrl = `http://${HOST}`;\r\n\r\n  const [user, setUser] = useLocalStorageSetState(\r\n    {\r\n      token: \"\",\r\n      user: {\r\n        id: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n      },\r\n    },\r\n    \"user\"\r\n  );\r\n\r\n  return (\r\n    <CommonContext.Provider\r\n      value={{\r\n        serverUrl,\r\n        user,\r\n        setUser,\r\n      }}\r\n    >\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Start}></Route>\r\n          <Route exact path=\"/Main\" component={Main}></Route>\r\n          <Route exact path=\"/Community\" component={Community}></Route>\r\n          <Route exact path=\"/MyBar\" component={MyBar}></Route>\r\n          <Route exact path=\"/SignUp\" component={SignUp}></Route>\r\n          <Route exact path=\"/FindPW\" component={FindPW}></Route>\r\n          <Route exact path=\"/UploadRecipe\" component={UploadRecipe}></Route>\r\n          <Route exact path=\"/Community/Create\" component={ArticleForm}></Route>\r\n          <Route\r\n            exact\r\n            path=\"/Community/Comment\"\r\n            component={CommentDisplay}\r\n          ></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </CommonContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport store from 'store';\r\n\r\nexport const usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n};\r\n\r\nexport const useKeyPress = (targetKey) => {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', downHandler);\r\n    window.addEventListener('keyup', upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener('keydown', downHandler);\r\n      window.removeEventListener('keyup', upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n};\r\n\r\nexport const useLocalStorageSetState = (initialValue, name) => {\r\n  if (!name) {\r\n    throw new Error('Name must be provided to persist to localStorage');\r\n  }\r\n  const actualInitialValue =\r\n    store.get(name) !== undefined ? store.get(name) : initialValue;\r\n  const [value, setValue] = useState(actualInitialValue);\r\n\r\n  useEffect(() => {\r\n    store.set(name, value);\r\n  }, [value]);\r\n  return [value, setValue];\r\n};\r\n\r\nexport const useIntersectionObserver = ({\r\n  root,\r\n  target,\r\n  onIntersect,\r\n  threshold = 1.0,\r\n  rootMargin = '0px',\r\n}) => {\r\n  useEffect(() => {\r\n    if (!root) {\r\n      return;\r\n    }\r\n\r\n    const observer = new IntersectionObserver(onIntersect, {\r\n      root,\r\n      rootMargin,\r\n      threshold,\r\n    });\r\n\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    observer.observe(target);\r\n\r\n    return () => {\r\n      observer.unobserve(target);\r\n    };\r\n  }, [target, root, rootMargin, onIntersect, threshold]);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}